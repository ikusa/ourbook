{"version":3,"sources":["components/SideNav.js","components/Table.js","screens/Users.js","container/UsersContainer.js","components/Card.js","components/Comments.js","screens/Posts.js","components/Dialog.js","components/Photos.js","screens/Albums.js","screens/MainNav.js","reducers/users.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["PermanentDrawerLeft","_this$props","this","props","classes","navContent","routes","react_default","a","createElement","className","root","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","Typography_default","variant","color","noWrap","Drawer_default","drawer","paper","drawerPaper","anchor","toolbar","Divider_default","List_default","map","_ref","name","path","NavLink","style","textDecoration","to","ListItem_default","button","key","ListItemIcon_default","MoveToInbox_default","ListItemText_default","primary","content","Component","withStyles","theme","display","width","concat","marginLeft","flexShrink","mixins","flexGrow","backgroundColor","palette","background","default","padding","spacing","unit","marginTop","overflowX","table","minWidth","rows","navigationsButton","keys","Object","index","tableHeads","TableCell_default","navHeads","navigation","header","tableRows","row","rowCells","component","scope","navCells","id","Button_default","buttonName","TableRow_default","toConsumableArray","Paper_default","Table_default","TableHead_default","TableBody_default","Stuff","state","users","fetch","responses","json","addUsers","length","components_Table","connect","dispatch","type","Users","SimpleCard","title","_this","body","handleTitleChange","event","setState","target","value","handleBodyChange","_handleSubmit","handleSubmit","alert","cardAction","category","isCreating","isEditing","toggleEdit","handleDelete","Card_default","card","CardContent_default","flexDirection","justifyContent","gutterBottom","size","onClick","Check_default","Edit_default","Delete_default","TextField_default","onChange","CardActions_default","React","bullet","margin","transform","fontSize","pos","marginBottom","flex","maxWidth","comments","comment","email","secondary","Posts","posts","post","find","showComments","components_Comments","toggleShowComment","asyncToGenerator","regenerator_default","mark","_callee","commentsUrl","wrap","_context","prev","next","sent","stop","toggleEditPost","postData","_callee2","postsUrl","postResponse","_context2","method","JSON","stringify","headers","Content-type","objectSpread","handleDeletePost","_callee3","_context3","filter","input","_callee4","_context4","userId","match","params","_this2","flexWrap","components_Card","ResponsiveDialog","open","handleClickOpen","handleClose","fullScreen","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","src","alt","DialogActions_default","autoFocus","withMobileDialog","maxHeight","media","objectFit","photos","photo","CardMedia_default","height","image","components_Dialog","Albums","albums","album","showPhotos","Photos","mutateShowPhotos","photosUrl","albumsUrl","MainNav","Route","exact","UsersContainer","SideNav","arguments","undefined","action","combineReducers","store","createStore","rootReducer","App","es","HashRouter","screens_MainNav","Boolean","window","location","hostname","document","getElementById","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"udAwDMA,mLACK,IAAAC,EAC+BC,KAAKC,MAApCC,EADAH,EACAG,QAASC,EADTJ,EACSI,WAAYC,EADrBL,EACqBK,OAE5B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,MACtBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,MACAD,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQM,SAAS,QAAQJ,UAAWN,EAAQW,QAC1CR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAYU,QAAQ,KAAKC,MAAM,UAAUC,QAAM,GAC5C,aAIPb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEE,UAAWN,EAAQkB,OACnBJ,QAAQ,YACRd,QAAS,CACPmB,MAAOnB,EAAQoB,aAEjBC,OAAO,QAEPlB,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQsB,UACxBnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,MACAD,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,KACGF,EAAOuB,IAAI,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAMC,EAARF,EAAQE,KAAR,OACVzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAASC,MAAO,CAACC,eAAgB,QAASC,GAAIJ,GAC5CzB,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAU8B,QAAM,EAACC,IAAKR,GACpBxB,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,KACED,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,OAEFD,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAcmC,QAASZ,UAMjCxB,EAAAC,EAAAC,cAAA,QAAMC,UAAWN,EAAQwC,SACvBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQsB,UACvBrB,aAvCuBwC,aAkDnBC,uBAtFA,SAACC,GAAD,MAAY,CACzBpC,KAAM,CACJqC,QAAS,QAEXjC,OAAQ,CACNkC,MAAK,eAAAC,OAPW,IAOX,OACLC,WARgB,KAUlB7B,OAAQ,CACN2B,MAXgB,IAYhBG,WAAY,GAEd5B,YAAa,CACXyB,MAfgB,KAiBlBvB,QAASqB,EAAMM,OAAO3B,QACtBkB,QAAS,CACPU,SAAU,EACVC,gBAAiBR,EAAMS,QAAQC,WAAWC,QAC1CC,QAA8B,EAArBZ,EAAMa,QAAQC,QAmEZf,CAAmB9C,6KCJnB8C,4BA7EA,SAACC,GAAD,MAAY,CACzBpC,KAAM,CACJsC,MAAO,OACPa,UAAgC,EAArBf,EAAMa,QAAQC,KACzBE,UAAW,QAEbC,MAAO,CACLC,SAAU,OAsECnB,CAlEf,SAAqB3C,GAAc,IAC5BC,EAAoCD,EAApCC,QAAS8D,EAA2B/D,EAA3B+D,KAAMC,EAAqBhE,EAArBgE,kBAChBC,EAAOC,OAAOD,KAAKF,EAAK,IAAIrC,IAAI,SAACU,EAAK+B,GACxC,MAA4B,kBAAjBJ,EAAK,GAAG3B,GACVA,EAEF,OAGLgC,EAAaF,OAAOD,KAAKF,EAAK,IAAIrC,IAAI,SAACU,EAAK+B,GAC9C,MAA4B,kBAAjBJ,EAAK,GAAG3B,GACVhC,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,KAAY+B,GAEd,OAELkC,EAAWN,EAAkBtC,IAAI,SAAC6C,GACpC,OAAOnE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,KAAYkE,EAAWC,UAE5BC,EAAYV,EAAKrC,IAAI,SAACgD,GACxB,IAAIC,EAAWV,EAAKvC,IAAI,SAACU,GACvB,OAAW,MAAPA,EAEAhC,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAWuE,UAAU,KAAKC,MAAM,OAC7BH,EAAItC,IAIJ,OAEL0C,EAAWd,EAAkBtC,IAAI,SAAC6C,GACpC,OACEnE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAWuE,UAAU,KAAKC,MAAM,OAC9BzE,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,MAAO,CAACC,eAAgB,QACxBC,GAAE,GAAAc,OAAKwB,EAAW1C,MAAhBkB,OAAuB2B,EAAIK,KAE7B3E,EAAAC,EAAAC,cAAC0E,GAAA3E,EAAD,CACEU,QAAQ,YACRC,MAAM,UACNT,UAAWN,EAAQkC,QAElBoC,EAAWU,gBAMtB,OAAO7E,EAAAC,EAAAC,cAAC4E,GAAA7E,EAAD,CAAU+B,IAAKsC,EAAIK,IAAnBb,OAAAiB,EAAA,EAAAjB,CAA4BS,GAA5B5B,OAAAmB,OAAAiB,EAAA,EAAAjB,CAAyCY,OAGlD,OACE1E,EAAAC,EAAAC,cAAC8E,GAAA/E,EAAD,CAAOE,UAAWN,EAAQO,MACxBJ,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CAAOE,UAAWN,EAAQ4D,OACxBzD,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,KACED,EAAAC,EAAAC,cAAC4E,GAAA7E,EAAD,KAAA6D,OAAAiB,EAAA,EAAAjB,CAAeE,GAAfrB,OAAAmB,OAAAiB,EAAA,EAAAjB,CAA8BI,MAEhClE,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,KAAYoE,OChDLe,8MAjCbC,MAAQ,CACNC,MAAO,wNAGeC,MAAM,4DAAxBC,kBACcA,EAAUC,cAAxBH,SACJ3F,KAAKC,MAAM8F,SAASJ,sIAEb,IACFA,EAAS3F,KAAKC,MAAd0F,MAcL,QAb+B,IAAjBA,EAAMK,SAehB3F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC0F,GAAD,CAAOjC,KAAM2B,EAAO1B,kBAhBF,CACtB,CACEQ,OAAQ,QACRS,WAAY,QACZpD,KAAM,gBAER,CACE2C,OAAQ,SACRS,WAAY,SACZpD,KAAM,4BArBMa,aCGLuD,eAVO,SAACR,GAAD,MAAY,CAChCC,MAAOD,EAAMC,QAEU,SAACQ,GAAD,MAAe,CACtCJ,SAAU,SAACJ,GAAD,OACRQ,EAAS,CACPC,KAAM,YACNT,aAGSO,CAGbG,2JCiCIC,8MACJZ,MAAQ,CACNa,MAAOC,EAAKvG,MAAMsG,MAClBE,KAAMD,EAAKvG,MAAMwG,QAuFnBC,kBAAoB,SAACC,GACnBH,EAAKI,SAAS,CAACL,MAAOI,EAAME,OAAOC,WAErCC,iBAAmB,SAACJ,GAClBH,EAAKI,SAAS,CAACH,KAAME,EAAME,OAAOC,WAEpCE,cAAgB,WACdR,EAAKI,SAAS,CAACL,MAAO,GAAIE,KAAM,KAChCD,EAAKvG,MAAMgH,aAAaT,EAAKd,MAA7Bc,GACAU,MAAM,oHA9FC,IAAAnH,EAUHC,KAAKC,MARPC,EAFKH,EAELG,QACAiH,EAHKpH,EAGLoH,WACAnC,EAJKjF,EAILiF,GACAoC,EALKrH,EAKLqH,SACAC,EANKtH,EAMLsH,WACAC,EAPKvH,EAOLuH,UACAC,EARKxH,EAQLwH,WACAC,EATKzH,EASLyH,aAEF,OACEnH,EAAAC,EAAAC,cAACkH,GAAAnH,EAAD,CAAME,UAAWN,EAAQwH,MACvBrH,EAAAC,EAAAC,cAACoH,GAAArH,EAAD,KACED,EAAAC,EAAAC,cAAA,OACEyB,MAAO,CACLc,QAAS,OACT8E,cAAe,MACfC,eAAgB,kBAGlBxH,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEE,UAAWN,EAAQqG,MACnBtF,MAAM,gBACN6G,cAAY,GAEXV,GAEFC,EACChH,EAAAC,EAAAC,cAAC0E,GAAA3E,EAAD,CACEyH,KAAK,QACL9G,MAAM,YACN+G,QAAShI,KAAKgH,eAEd3G,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,OAGFD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0E,GAAA3E,EAAD,CACEyH,KAAK,QACL9G,MAAM,YACN+G,QAAST,EAAWvC,EAAIhF,KAAK0F,QAE5B4B,EAAYjH,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,MAAYD,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,OAE3BD,EAAAC,EAAAC,cAAC0E,GAAA3E,EAAD,CACEyH,KAAK,QACL9G,MAAM,UACN+G,QAASR,EAAaxC,IAEtB3E,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,SAMRD,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAYU,QAAQ,KAAK6D,UAAU,MAChCyC,EACCjH,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,CACE0B,MAAO,CAACe,MAAO,KACfqD,KAAK,OACLU,MAAO9G,KAAK0F,MAAMa,MAClB8B,SAAUrI,KAAK0G,oBAGjB1G,KAAK0F,MAAMa,OAGflG,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAYuE,UAAU,KACnByC,EACCjH,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,CACE0B,MAAO,CAACe,MAAO,KACfqD,KAAK,OACLU,MAAO9G,KAAK0F,MAAMe,KAClB4B,SAAUrI,KAAK+G,mBAGjB/G,KAAK0F,MAAMe,OAIjBpG,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,CAAa0B,MAAO,CAACc,QAAS,SAAUqE,EAAWnC,YAtFlCuD,IAAM5F,WA2GhBC,wBAhIA,CACb8E,KAAM,CACJ3E,MAAO,KAGTyF,OAAQ,CACN1F,QAAS,eACT2F,OAAQ,QACRC,UAAW,cAEbnC,MAAO,CACLoC,SAAU,IAEZC,IAAK,CACHC,aAAc,KAkHHjG,CAAmB0D,IC1GnB1D,4BAzCA,SAACC,GAAD,MAAY,CACzBpC,KAAM,CACJqI,KAAM,EACN/F,MAAO,OACPgG,SAAU,OAqCCnG,CA1Bf,SAAkB3C,GAAc,IACvBC,EAAqBD,EAArBC,QAAS8I,EAAY/I,EAAZ+I,SAEhB,OACE3I,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,MACtBJ,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,KACG0I,EAASrH,IAAI,SAACsH,GAAY,IACpBxC,EAAewC,EAAfxC,KAAMyC,EAASD,EAATC,MACX,OACE7I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,KACED,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAcmC,QAASgE,EAAM0C,UAAWD,KAE1C7I,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAASuE,UAAU,cC2JlBuE,8MAtKb1D,MAAQ,CACN2D,MAAO,MA0DTlC,WAAa,SAACnC,GACZ,IAAIsE,EAAO9C,EAAKd,MAAM2D,MAAME,KAAK,SAACD,GAAD,OAAUA,EAAKtE,KAAOA,IACvD,GAAIsE,EACF,OACEjJ,EAAAC,EAAAC,cAAA,OACEyB,MAAO,CACLc,QAAS,OACTgG,KAAM,EACNlB,cAAe,WAGhB0B,EAAKE,aAAenJ,EAAAC,EAAAC,cAACkJ,GAAD,CAAUT,SAAUM,EAAKN,WAAe,KAC7D3I,EAAAC,EAAAC,cAAC0E,GAAA3E,EAAD,CAAQ0H,QAASxB,EAAKkD,kBAAkB1E,GAAK+C,KAAK,SAC/CuB,EAAKE,aAAenJ,EAAAC,EAAAC,cAAA,yBAAsBF,EAAAC,EAAAC,cAAA,8BAMrDmJ,kBAAoB,SAAC1E,GACnB,OAAAb,OAAAwF,EAAA,GAAAC,EAAAtJ,EAAAuJ,KAAO,SAAAC,IAAA,IAAAT,EAAAC,EAAAS,EAAAlE,EAAAmD,EAAA,OAAAY,EAAAtJ,EAAA0J,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACDd,EADClF,OAAAiB,EAAA,EAAAjB,CACWqC,EAAKd,MAAM2D,SACvBC,EAAOD,EAAME,KAAK,SAACD,GAAD,OAAUA,EAAKtE,KAAOA,KAFvC,CAAAiF,EAAAE,KAAA,YAIHb,EAAKE,cAAgBF,EAAKE,cACtBF,EAAKE,aALN,CAAAS,EAAAE,KAAA,gBAMGJ,EANH,8CAAA/G,OAM+DgC,EAC9D,EAPD,aAAAiF,EAAAE,KAAA,EAQqBvE,MAAMmE,GAR3B,cAQGlE,EARHoE,EAAAG,KAAAH,EAAAE,KAAA,GASoBtE,EAAUC,OAT9B,QASGkD,EATHiB,EAAAG,KAUDd,EAAKN,SAAWA,EAVf,QAYHxC,EAAKI,SAAS,CACZyC,UAbC,yBAAAY,EAAAI,SAAAP,EAAA9J,YAkBTsK,eAAiB,SAACtF,EAAYuF,GAC5B,OAAApG,OAAAwF,EAAA,GAAAC,EAAAtJ,EAAAuJ,KAAO,SAAAW,IAAA,IAAAnB,EAAAC,EAAAmB,EAAA5E,EAAA6E,EAAA,OAAAd,EAAAtJ,EAAA0J,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,UACDd,EADClF,OAAAiB,EAAA,EAAAjB,CACWqC,EAAKd,MAAM2D,SACvBC,EAAOD,EAAME,KAAK,SAACD,GAAD,OAAUA,EAAKtE,KAAOA,KAFvC,CAAA2F,EAAAR,KAAA,YAIHb,EAAKhC,WAAagC,EAAKhC,UAClBgC,EAAKhC,UALP,CAAAqD,EAAAR,KAAA,gBAMGM,EANH,+CAAAzH,OAM6DgC,GAN7D2F,EAAAR,KAAA,EAOqBvE,MAAM6E,EAAU,CACpCG,OAAQ,MACRnE,KAAMoE,KAAKC,UAAU,CACnB9F,KACAuB,MAAOgE,EAAShE,MAChBE,KAAM8D,EAAS9D,OAEjBsE,QAAS,CACPC,eAAgB,qCAfnB,cAOGnF,EAPH8E,EAAAP,KAAAO,EAAAR,KAAA,GAkBwBtE,EAAUC,OAlBlC,QAkBG4E,EAlBHC,EAAAP,KAmBDd,EAAInF,OAAA8G,GAAA,EAAA9G,CAAA,GAAOmF,EAAP,CAAaoB,iBAnBhB,QAqBHlE,EAAKI,SAAS,CACZyC,UAtBC,yBAAAsB,EAAAN,SAAAG,EAAAxK,YA2BTkL,iBAAmB,SAAClG,GAClB,OAAAb,OAAAwF,EAAA,GAAAC,EAAAtJ,EAAAuJ,KAAO,SAAAsB,IAAA,IAAA9B,EAAAoB,EAAA,OAAAb,EAAAtJ,EAAA0J,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACDd,EADClF,OAAAiB,EAAA,EAAAjB,CACWqC,EAAKd,MAAM2D,OACvBoB,EAFC,+CAAAzH,OAEyDgC,GAFzDoG,EAAAjB,KAAA,EAGCvE,MAAM6E,EAAU,CACpBG,OAAQ,WAJL,OAMLvB,EAAQA,EAAMgC,OAAO,SAAC/B,GACpB,OAAOA,EAAKtE,KAAOA,IAGrBwB,EAAKI,SAAS,CACZyC,UAXG,wBAAA+B,EAAAf,SAAAc,EAAAnL,YAeTiH,aAAe,SAACqE,GACd,OAAAnH,OAAAwF,EAAA,GAAAC,EAAAtJ,EAAAuJ,KAAO,SAAA0B,IAAA,IAAAhF,EAAAE,EAAAZ,EAAA6E,EAAA,OAAAd,EAAAtJ,EAAA0J,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cACA5D,EAAe+E,EAAf/E,MAAOE,EAAQ6E,EAAR7E,KADP+E,EAAArB,KAAA,EAEiBvE,MACpB,6CACA,CACEgF,OAAQ,OACRnE,KAAMoE,KAAKC,UAAU,CACnBvE,QACAE,OACAgF,OAAQ,IAEVV,QAAS,CACPC,eAAgB,qCAZjB,cAEDnF,EAFC2F,EAAApB,KAAAoB,EAAArB,KAAA,EAgBoBtE,EAAUC,OAhB9B,OAgBD4E,EAhBCc,EAAApB,KAiBL5D,EAAKI,SAAS,CACZyC,MAAMlF,OAAAiB,EAAA,EAAAjB,CAAKqC,EAAKd,MAAM2D,OAAjBrG,OAAA,CAAwB0H,MAlB1B,wBAAAc,EAAAnB,SAAAkB,EAAAvL,yNA1IHgF,EAAKhF,KAAKC,MAAMyL,MAAMC,OAAO3G,GAC7ByF,EAAW,6CACXzF,IACFyF,EAAQ,GAAAzH,OAAMyH,EAAN,YAAAzH,OAAyBgC,aAEbY,MAAM6E,iBAAxB5E,kBACcA,EAAUC,eAAxBuD,UACE1H,IAAI,SAAC2H,GACT,OAAOnF,OAAA8G,GAAA,EAAA9G,CAAA,GAAImF,EAAX,CAAiBhC,WAAW,MAE9BtH,KAAK4G,SAAS,CAACyC,MAAMlF,OAAAiB,EAAA,EAAAjB,CAAKkF,yIAEnB,IAAAuC,EAAA5L,KACFqJ,EAASrJ,KAAK0F,MAAd2D,MACL,OACEhJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAACc,QAAS,OAAQ8E,cAAe,MAAOiE,SAAU,SAC5DxL,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAACyG,OAAQ,KACnBpI,EAAAC,EAAAC,cAACuL,GAAD,CACE1E,SAAS,QACTb,MAAO,GACPE,KAAM,GACNU,WAAYnH,KAAKmH,WACjBnC,GAAI,EACJqC,YAAY,EACZC,WAAW,EACXC,WAAYvH,KAAKsK,eACjB9C,aAAcxH,KAAKkL,iBACnBjE,aAAcjH,KAAKiH,gBAGtBoC,EACGA,EAAM1H,IAAI,SAAC2H,GACT,OACEjJ,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAACyG,OAAQ,IAAKpG,IAAKiH,EAAKtE,IAClC3E,EAAAC,EAAAC,cAACuL,GAAD,CACE1E,SAAS,QACTb,MAAO+C,EAAK/C,MACZE,KAAM6C,EAAK7C,KACXU,WAAYyE,EAAKzE,WACjBnC,GAAIsE,EAAKtE,GACTsC,UAAWgC,EAAKhC,UAChBC,WAAYqE,EAAKtB,eACjB9C,aAAcoE,EAAKV,iBACnBjE,aAAc2E,EAAK3E,kBAK3B,cAvDMtE,gKCfdoJ,8MACJrG,MAAQ,CACNsG,MAAM,KAkCRC,gBAAkB,WAChBzF,EAAKI,SAAS,CAACoF,MAAM,OAGvBE,YAAc,WACZ1F,EAAKI,SAAS,CAACoF,MAAM,6EArCd,IACAG,EAAcnM,KAAKC,MAAnBkM,WAEP,OACE9L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0E,GAAA3E,EAAD,CAAQU,QAAQ,WAAWgH,QAAShI,KAAKiM,iBAAzC,UAGA5L,EAAAC,EAAAC,cAAC6L,GAAA9L,EAAD,CACE6L,WAAYA,EACZH,KAAMhM,KAAK0F,MAAMsG,KACjBK,QAASrM,KAAKkM,YACdI,kBAAgB,0BAChBvD,SAAS,MAET1I,EAAAC,EAAAC,cAACgM,GAAAjM,EAAD,CAAa0E,GAAG,2BACb,sDAEH3E,EAAAC,EAAAC,cAACiM,GAAAlM,EAAD,KACED,EAAAC,EAAAC,cAACkM,GAAAnM,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKmM,IAAK,yCAA0CC,IAAI,OAG5DtM,EAAAC,EAAAC,cAACqM,GAAAtM,EAAD,KACED,EAAAC,EAAAC,cAAC0E,GAAA3E,EAAD,CAAQ0H,QAAShI,KAAKkM,YAAajL,MAAM,UAAU4L,WAAS,GAA5D,mBA5BmBtE,IAAM5F,WAiDtBmK,UAAmBf,ICqBnBnJ,4BA1DA,CACb8E,KAAM,CACJ3E,MAAO,IACPgK,UAAW,IACXtE,OAAQ,IAEVuE,MAAO,CACLC,UAAW,UAmDArK,CA/Cf,SAAsB3C,GAAc,IAC3BC,EAAmBD,EAAnBC,QAASgN,EAAUjN,EAAViN,OAChB,OACE7M,EAAAC,EAAAC,cAAA,OACEyB,MAAO,CACLc,QAAS,OACTgG,KAAM,EACNlB,cAAe,MACfiE,SAAU,SAGXqB,EAAOvL,IAAI,SAACwL,GACX,OACE9M,EAAAC,EAAAC,cAACkH,GAAAnH,EAAD,CAAME,UAAWN,EAAQwH,MACvBrH,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,CACEuE,UAAU,MACV8H,IAAI,wBACJnM,UAAWN,EAAQ8M,MACnBK,OAAO,MACPtK,MAAM,MACNuK,MAAM,yCACN/G,MAAM,0BAERlG,EAAAC,EAAAC,cAACoH,GAAArH,EAAD,KACED,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACE0B,MAAO,CAACqL,OAAQ,IAChBvF,cAAY,EACZ9G,QAAQ,IACR6D,UAAU,KAETsI,EAAM5G,QAGXlG,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,KACED,EAAAC,EAAAC,cAACgN,GAAD,aCgCCC,8MAxEb9H,MAAQ,CACN+H,OAAQ,MAoCVtG,WAAa,SAACnC,GACZ,IAAI0I,EAAQlH,EAAKd,MAAM+H,OAAOzI,GAC9B,OACE3E,EAAAC,EAAAC,cAAA,OACEyB,MAAO,CACLc,QAAS,OACTgG,KAAM,EACNlB,cAAe,WAGhB8F,EAAMC,WAAatN,EAAAC,EAAAC,cAACqN,GAAD,CAAcV,OAAQQ,EAAMR,SAAa,KAC7D7M,EAAAC,EAAAC,cAAC0E,GAAA3E,EAAD,CAAQ0H,QAASxB,EAAKqH,iBAAiB7I,GAAK+C,KAAK,SAC9C2F,EAAMC,WAAatN,EAAAC,EAAAC,cAAA,wBAAqBF,EAAAC,EAAAC,cAAA,6BAKjDsN,iBAAmB,SAAC7I,GAClB,OAAAb,OAAAwF,EAAA,GAAAC,EAAAtJ,EAAAuJ,KAAO,SAAAC,IAAA,IAAA2D,EAAAK,EAAAjI,EAAAqH,EAAA,OAAAtD,EAAAtJ,EAAA0J,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACDsD,EADCtJ,OAAAiB,EAAA,EAAAjB,CACYqC,EAAKd,MAAM+H,SACrBzI,GAAI2I,YAAcF,EAAOzI,GAAI2I,YAChCF,EAAOzI,GAAI2I,WAHV,CAAA1D,EAAAE,KAAA,gBAIC2D,EAJD,+CAAA9K,OAI4DgC,EAC7D,EALC,WAAAiF,EAAAE,KAAA,EAMmBvE,MAAMkI,GANzB,cAMCjI,EANDoE,EAAAG,KAAAH,EAAAE,KAAA,EAOgBtE,EAAUC,OAP1B,OAOCoH,EAPDjD,EAAAG,KAQHqD,EAAOzI,GAAIkI,OAASA,EARjB,QAUL1G,EAAKI,SAAS,CACZ6G,WAXG,yBAAAxD,EAAAI,SAAAP,EAAA9J,yNAnDHgF,EAAKhF,KAAKC,MAAMyL,MAAMC,OAAO3G,GAC7B+I,EAAY,8CACZ/I,IACF+I,EAAS,GAAA/K,OAAM+K,EAAN,YAAA/K,OAA0BgC,aAEfY,MAAMmI,iBAAxBlI,kBACeA,EAAUC,cAAzB2H,SACJzN,KAAK4G,SAAS,CAAC6G,OAAOtJ,OAAAiB,EAAA,EAAAjB,CAAKsJ,yIAEpB,IAAA7B,EAAA5L,KACFyN,EAAUzN,KAAK0F,MAAf+H,OACL,OACEpN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAACc,QAAS,OAAQ8E,cAAe,MAAOiE,SAAU,SAC3D4B,EACGA,EAAO9L,IAAI,SAAC+L,GACV,OACErN,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAACyG,OAAQ,KACnBpI,EAAAC,EAAAC,cAACuL,GAAD,CACE1E,SAAS,SACTb,MAAOmH,EAAMnH,MACbY,WAAYyE,EAAKzE,WACjBnC,GAAI0I,EAAM1I,GAAK,OAKvB,cAjCOrC,aCSNqL,8MA1Bb5N,OAAS,CACP,CAACyB,KAAM,QAASC,KAAM,KACtB,CAACD,KAAM,QAASC,KAAM,UACtB,CAACD,KAAM,SAAUC,KAAM,cASzB3B,WAAa,WACX,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAACpM,KAAK,IAAI+C,UAAWsJ,KACjC9N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAACpM,KAAK,SAAS+C,UAAWuE,KACtC/I,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAACpM,KAAK,kBAAkB+C,UAAWuE,KAC/C/I,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOnM,KAAK,UAAU+C,UAAW2I,KACjCnN,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOnM,KAAK,mBAAmB+C,UAAW2I,gFAdhD,OACEnN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6N,EAAD,CAASjO,WAAYH,KAAKG,WAAYC,OAAQJ,KAAKI,iBATrCuC,sBCQPgD,GATD,WAAuC,IAAtCD,EAAsC2I,UAAArI,OAAA,QAAAsI,IAAAD,UAAA,GAAAA,UAAA,GAAvB,GAAIE,EAAmBF,UAAArI,OAAA,EAAAqI,UAAA,QAAAC,EACnD,OAAQC,EAAOnI,MACb,IAAK,YACH,OAAOjC,OAAAiB,EAAA,EAAAjB,CAAIuB,GAAX1C,OAAAmB,OAAAiB,EAAA,EAAAjB,CAAqBoK,EAAO5I,QAC9B,QACE,OAAOD,ICRE8I,gBAAgB,CAC7B7I,WCGI8I,GAAQC,aAAYC,IAcXC,oLAVX,OACEvO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAUJ,MAAOA,IACfpO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,KACEzO,EAAAC,EAAAC,cAACwO,GAAD,eALQpM,aCEEqM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzD,MACvB,2DCZN,IAAMjL,GAAiB2O,SAASC,eAAe,QAEnC,MAAR5O,IACF6O,IAASC,OAAOlP,EAAAC,EAAAC,cAACiP,GAAD,MAAS/O,IDoIrB,kBAAmBgP,WACjBA,UAAUC,eACZD,UAAUC,cAAcC,MAAMC,KAAK,SAACC,GAClCA,EAAaC","file":"static/js/main.4fc5579a.chunk.js","sourcesContent":["//@flow\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {NavLink} from 'react-router-dom';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n  },\n});\ntype Route = {name: string, path: string};\n\ntype Props = {\n  classes: {\n    root: Object,\n    appBar: Object,\n    drawer: Object,\n    drawerPaper: Object,\n    toolbar: Object,\n    content: Object,\n  },\n  routes: Array<Route>,\n  navContent: Function,\n};\nclass PermanentDrawerLeft extends Component<Props> {\n  render() {\n    const {classes, navContent, routes} = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              {'OurBook'}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          anchor=\"left\"\n        >\n          <div className={classes.toolbar} />\n          <Divider />\n          <List>\n            {routes.map(({name, path}) => (\n              <NavLink style={{textDecoration: 'none'}} to={path}>\n                <ListItem button key={name}>\n                  <ListItemIcon>\n                    <InboxIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={name} />\n                </ListItem>\n              </NavLink>\n            ))}\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {navContent()}\n        </main>\n      </div>\n    );\n  }\n}\n\nPermanentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PermanentDrawerLeft);\n","//@flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport {NavLink} from 'react-router-dom';\n\ntype Navigation = {\n  header: string,\n  buttonName: string,\n  path: string,\n};\n\ntype Props = {\n  classes: Object,\n  rows: Array<Object>,\n  navigationsButton: Array<Navigation>,\n};\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\nfunction SimpleTable(props: Props) {\n  let {classes, rows, navigationsButton} = props;\n  let keys = Object.keys(rows[0]).map((key, index) => {\n    if (typeof rows[0][key] === 'string') {\n      return key;\n    }\n    return null;\n  });\n\n  let tableHeads = Object.keys(rows[0]).map((key, index) => {\n    if (typeof rows[0][key] === 'string') {\n      return <TableCell>{key}</TableCell>;\n    }\n    return null;\n  });\n  let navHeads = navigationsButton.map((navigation) => {\n    return <TableCell>{navigation.header}</TableCell>;\n  });\n  let tableRows = rows.map((row) => {\n    let rowCells = keys.map((key) => {\n      if (key != null) {\n        return (\n          <TableCell component=\"th\" scope=\"row\">\n            {row[key]}\n          </TableCell>\n        );\n      }\n      return null;\n    });\n    let navCells = navigationsButton.map((navigation) => {\n      return (\n        <TableCell component=\"th\" scope=\"row\">\n          <NavLink\n            style={{textDecoration: 'none'}}\n            to={`${navigation.path}${row.id}`}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              {navigation.buttonName}\n            </Button>\n          </NavLink>\n        </TableCell>\n      );\n    });\n    return <TableRow key={row.id}>{[...rowCells, ...navCells]}</TableRow>;\n  });\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>{[...tableHeads, ...navHeads]}</TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTable);\n","//@flow\nimport React, {Component} from 'react';\nimport Table from '../components/Table';\nimport type {User} from '../types/User';\ntype Props = {\n  users: Array<User>,\n  addUsers: Function,\n};\n\ntype State = {users: Array<User>};\nclass Stuff extends Component<Props, State> {\n  state = {\n    users: [],\n  };\n  async componentWillMount() {\n    let responses = await fetch('https://jsonplaceholder.typicode.com/users');\n    let users = await responses.json();\n    this.props.addUsers(users);\n  }\n  render() {\n    let {users} = this.props;\n    let isEmpty = users.length === 0;\n    let navigationsButton = [\n      {\n        header: 'Posts',\n        buttonName: 'Posts',\n        path: '/user/posts/',\n      },\n      {\n        header: 'Albums',\n        buttonName: 'Albums',\n        path: '/user/albums/',\n      },\n    ];\n    return (\n      !isEmpty && (\n        <div>\n          <h2>Users</h2>\n          <Table rows={users} navigationsButton={navigationsButton} />\n        </div>\n      )\n    );\n  }\n}\nexport default Stuff;\n","import {connect} from 'react-redux';\nimport Users from '../screens/Users';\n\nlet mapStateToProps = (state) => ({\n  users: state.users,\n});\nlet mapDispatchToProps = (dispatch) => ({\n  addUsers: (users) =>\n    dispatch({\n      type: 'ADD_USERS',\n      users,\n    }),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Users);\n","//@flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport Edit from '@material-ui/icons/Edit';\nimport Check from '@material-ui/icons/Check';\nimport Delete from '@material-ui/icons/Delete';\n\ntype Props = {\n  classes: Object,\n  id: number,\n  title: string,\n  body: string,\n  category: string,\n  isCreating: boolean,\n  isEditing: boolean,\n  cardAction: Function,\n  toggleEdit: Function,\n  handleSubmit: Function,\n  handleDelete: Function,\n};\nconst styles = {\n  card: {\n    width: 800,\n    // height: 200,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n};\ntype State = {\n  title: string,\n  body: string,\n};\nclass SimpleCard extends React.Component<Props, State> {\n  state = {\n    title: this.props.title,\n    body: this.props.body,\n  };\n  render() {\n    const {\n      classes,\n      cardAction,\n      id,\n      category,\n      isCreating,\n      isEditing,\n      toggleEdit,\n      handleDelete,\n    } = this.props;\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              {category}\n            </Typography>\n            {isCreating ? (\n              <ButtonBase\n                size=\"small\"\n                color=\"secondary\"\n                onClick={this._handleSubmit}\n              >\n                <Check />\n              </ButtonBase>\n            ) : (\n              <div>\n                <ButtonBase\n                  size=\"small\"\n                  color=\"secondary\"\n                  onClick={toggleEdit(id, this.state)}\n                >\n                  {isEditing ? <Check /> : <Edit />}\n                </ButtonBase>\n                <ButtonBase\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={handleDelete(id)}\n                >\n                  <Delete />\n                </ButtonBase>\n              </div>\n            )}\n          </div>\n\n          <Typography variant=\"h5\" component=\"h2\">\n            {isEditing ? (\n              <TextField\n                style={{width: 600}}\n                type=\"text\"\n                value={this.state.title}\n                onChange={this.handleTitleChange}\n              />\n            ) : (\n              this.state.title\n            )}\n          </Typography>\n          <Typography component=\"p\">\n            {isEditing ? (\n              <TextField\n                style={{width: 600}}\n                type=\"text\"\n                value={this.state.body}\n                onChange={this.handleBodyChange}\n              />\n            ) : (\n              this.state.body\n            )}\n          </Typography>\n        </CardContent>\n        <CardActions style={{display: 'flex'}}>{cardAction(id)}</CardActions>\n      </Card>\n    );\n  }\n  handleTitleChange = (event) => {\n    this.setState({title: event.target.value});\n  };\n  handleBodyChange = (event) => {\n    this.setState({body: event.target.value});\n  };\n  _handleSubmit = () => {\n    this.setState({title: '', body: ''});\n    this.props.handleSubmit(this.state)();\n    alert('submitted, scroll to bottom to check !!');\n  };\n}\n\nSimpleCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleCard);\n","//@flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = (theme) => ({\n  root: {\n    flex: 1,\n    width: '100%',\n    maxWidth: 700,\n  },\n});\ntype Comment = {\n  email: string,\n  body: string,\n};\ntype Props = {\n  classes: Object,\n  comments: Array<Comment>,\n};\nfunction Comments(props: Props) {\n  const {classes, comments} = props;\n\n  return (\n    <div className={classes.root}>\n      <List>\n        {comments.map((comment) => {\n          let {body, email} = comment;\n          return (\n            <div>\n              <ListItem>\n                <ListItemText primary={body} secondary={email} />\n              </ListItem>\n              <Divider component=\"li\" />\n            </div>\n          );\n        })}\n      </List>\n    </div>\n  );\n}\n\nComments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Comments);\n","//@flow\nimport React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '../components/Card';\nimport Comments from '../components/Comments';\n\ntype Comment = {\n  email: string,\n  body: string,\n};\ntype Post = {\n  userId: number,\n  id: number,\n  title: string,\n  body: string,\n  isEditing: boolean,\n  showComments: boolean,\n  comments: Array<Comment>,\n};\ntype Props = {\n  match: Object,\n};\ntype State = {\n  posts: Array<Post>,\n};\nclass Posts extends Component<Props, State> {\n  state = {\n    posts: [],\n  };\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    let postsUrl = 'https://jsonplaceholder.typicode.com/posts';\n    if (id) {\n      postsUrl = `${postsUrl}?userId=${id}`;\n    }\n    let responses = await fetch(postsUrl);\n    let posts = await responses.json();\n    posts.map((post) => {\n      return {...post, isEditing: false};\n    });\n    this.setState({posts: [...posts]});\n  }\n  render() {\n    let {posts} = this.state;\n    return (\n      <div>\n        <h2>Posts</h2>\n        <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n          <div style={{margin: 10}}>\n            <Card\n              category=\"Posts\"\n              title={''}\n              body={''}\n              cardAction={this.cardAction}\n              id={0}\n              isCreating={true}\n              isEditing={true}\n              toggleEdit={this.toggleEditPost}\n              handleDelete={this.handleDeletePost}\n              handleSubmit={this.handleSubmit}\n            />\n          </div>\n          {posts\n            ? posts.map((post) => {\n                return (\n                  <div style={{margin: 10}} key={post.id}>\n                    <Card\n                      category=\"Posts\"\n                      title={post.title}\n                      body={post.body}\n                      cardAction={this.cardAction}\n                      id={post.id}\n                      isEditing={post.isEditing}\n                      toggleEdit={this.toggleEditPost}\n                      handleDelete={this.handleDeletePost}\n                      handleSubmit={this.handleSubmit}\n                    />\n                  </div>\n                );\n              })\n            : null}\n        </div>\n      </div>\n    );\n  }\n  cardAction = (id: number) => {\n    let post = this.state.posts.find((post) => post.id === id);\n    if (post) {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n          }}\n        >\n          {post.showComments ? <Comments comments={post.comments} /> : null}\n          <Button onClick={this.toggleShowComment(id)} size=\"small\">\n            {post.showComments ? <p>Hide Comment</p> : <p>Show Comment</p>}\n          </Button>\n        </div>\n      );\n    }\n  };\n  toggleShowComment = (id: number) => {\n    return async () => {\n      let posts = [...this.state.posts];\n      let post = posts.find((post) => post.id === id);\n      if (post) {\n        post.showComments = !post.showComments;\n        if (post.showComments) {\n          let commentsUrl = `https://jsonplaceholder.typicode.com/posts/${id +\n            1}/comments`;\n          let responses = await fetch(commentsUrl);\n          let comments = await responses.json();\n          post.comments = comments;\n        }\n        this.setState({\n          posts,\n        });\n      }\n    };\n  };\n  toggleEditPost = (id: number, postData: {title: string, body: string}) => {\n    return async () => {\n      let posts = [...this.state.posts];\n      let post = posts.find((post) => post.id === id);\n      if (post) {\n        post.isEditing = !post.isEditing;\n        if (!post.isEditing) {\n          let postsUrl = `https://jsonplaceholder.typicode.com/posts/1${id}`;\n          let responses = await fetch(postsUrl, {\n            method: 'PUT',\n            body: JSON.stringify({\n              id,\n              title: postData.title,\n              body: postData.body,\n            }),\n            headers: {\n              'Content-type': 'application/json; charset=UTF-8',\n            },\n          });\n          let postResponse = await responses.json();\n          post = {...post, postResponse};\n        }\n        this.setState({\n          posts,\n        });\n      }\n    };\n  };\n  handleDeletePost = (id: number) => {\n    return async () => {\n      let posts = [...this.state.posts];\n      let postsUrl = `https://jsonplaceholder.typicode.com/posts/1${id}`;\n      await fetch(postsUrl, {\n        method: 'DELETE',\n      });\n      posts = posts.filter((post) => {\n        return post.id === id ? false : true;\n      });\n\n      this.setState({\n        posts,\n      });\n    };\n  };\n  handleSubmit = (input: {title: string, body: string}) => {\n    return async () => {\n      let {title, body} = input;\n      let responses = await fetch(\n        'https://jsonplaceholder.typicode.com/posts',\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            title,\n            body,\n            userId: 1,\n          }),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n          },\n        },\n      );\n      let postResponse = await responses.json();\n      this.setState({\n        posts: [...this.state.posts, postResponse],\n      });\n    };\n  };\n}\n\nexport default Posts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\n\nclass ResponsiveDialog extends React.Component {\n  state = {\n    open: false,\n  };\n  render() {\n    const {fullScreen} = this.props;\n\n    return (\n      <div>\n        <Button variant=\"outlined\" onClick={this.handleClickOpen}>\n          Detail\n        </Button>\n        <Dialog\n          fullScreen={fullScreen}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n          maxWidth=\"md\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">\n            {'accusamus beatae ad facilis cum similique qui sunt'}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <img src={'https://via.placeholder.com/600/92c952'} alt=\"\" />\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n  handleClickOpen = () => {\n    this.setState({open: true});\n  };\n\n  handleClose = () => {\n    this.setState({open: false});\n  };\n}\n\nResponsiveDialog.propTypes = {\n  fullScreen: PropTypes.bool.isRequired,\n};\n\nexport default withMobileDialog()(ResponsiveDialog);\n","//@flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from './Dialog';\n\ntype Photo = {\n  albumId: string,\n  id: string,\n  title: string,\n  url: string,\n  thumbnailUrl: string,\n};\ntype Props = {\n  photos: Array<Photo>,\n  classes: Object,\n};\nconst styles = {\n  card: {\n    width: 200,\n    maxHeight: 400,\n    margin: 20,\n  },\n  media: {\n    objectFit: 'cover',\n  },\n};\n\nfunction ImgMediaCard(props: Props) {\n  const {classes, photos} = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n      }}\n    >\n      {photos.map((photo) => {\n        return (\n          <Card className={classes.card}>\n            <CardMedia\n              component=\"img\"\n              alt=\"Contemplative Reptile\"\n              className={classes.media}\n              height=\"150\"\n              width=\"150\"\n              image=\"https://via.placeholder.com/150/92c952\"\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography\n                style={{height: 70}}\n                gutterBottom\n                variant=\"p\"\n                component=\"p\"\n              >\n                {photo.title}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Dialog />\n            </CardActions>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n\nImgMediaCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ImgMediaCard);\n","//@flow\nimport React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '../components/Card';\nimport ImgMediaCard from '../components/Photos';\n\ntype Photo = {\n  albumId: string,\n  id: string,\n  title: string,\n  url: string,\n  thumbnailUrl: string,\n};\ntype Album = {\n  userId: number,\n  id: number,\n  title: string,\n  showPhotos: boolean,\n  photos: Array<Photo>,\n};\ntype Props = {\n  match: Object,\n};\ntype State = {\n  albums: Array<Album>,\n};\nclass Albums extends Component<Props, State> {\n  state = {\n    albums: [],\n  };\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    let albumsUrl = 'https://jsonplaceholder.typicode.com/albums';\n    if (id) {\n      albumsUrl = `${albumsUrl}?userId=${id}`;\n    }\n    let responses = await fetch(albumsUrl);\n    let albums = await responses.json();\n    this.setState({albums: [...albums]});\n  }\n  render() {\n    let {albums} = this.state;\n    return (\n      <div>\n        <h2>Albums</h2>\n        <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n          {albums\n            ? albums.map((album) => {\n                return (\n                  <div style={{margin: 10}}>\n                    <Card\n                      category=\"Albums\"\n                      title={album.title}\n                      cardAction={this.cardAction}\n                      id={album.id - 1}\n                    />\n                  </div>\n                );\n              })\n            : null}\n        </div>\n      </div>\n    );\n  }\n  cardAction = (id: number) => {\n    let album = this.state.albums[id];\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flex: 1,\n          flexDirection: 'column',\n        }}\n      >\n        {album.showPhotos ? <ImgMediaCard photos={album.photos} /> : null}\n        <Button onClick={this.mutateShowPhotos(id)} size=\"small\">\n          {album.showPhotos ? <p>Hide photos</p> : <p>Show photos</p>}\n        </Button>\n      </div>\n    );\n  };\n  mutateShowPhotos = (id: number) => {\n    return async () => {\n      let albums = [...this.state.albums];\n      albums[id].showPhotos = !albums[id].showPhotos;\n      if (albums[id].showPhotos) {\n        let photosUrl = `https://jsonplaceholder.typicode.com/albums/${id +\n          1}/photos`;\n        let responses = await fetch(photosUrl);\n        let photos = await responses.json();\n        albums[id].photos = photos;\n      }\n      this.setState({\n        albums,\n      });\n    };\n  };\n}\n\nexport default Albums;\n","//@flow\nimport React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport UsersContainer from '../container/UsersContainer';\nimport Posts from './Posts';\nimport Albums from './Albums';\n\nclass MainNav extends Component<{}> {\n  routes = [\n    {name: 'Users', path: '/'},\n    {name: 'Posts', path: '/posts'},\n    {name: 'Albums', path: '/albums'},\n  ];\n  render() {\n    return (\n      <div>\n        <SideNav navContent={this.navContent} routes={this.routes} />\n      </div>\n    );\n  }\n  navContent = () => {\n    return (\n      <div>\n        <div className=\"content\">\n          <Route exact path=\"/\" component={UsersContainer} />\n          <Route exact path=\"/posts\" component={Posts} />\n          <Route exact path=\"/user/posts/:id\" component={Posts} />\n          <Route path=\"/albums\" component={Albums} />\n          <Route path=\"/user/albums/:id\" component={Albums} />\n        </div>\n      </div>\n    );\n  };\n}\nexport default MainNav;\n","//@flow\nimport type {User} from '../types/User';\ntype State = Array<User>;\ntype Action = {\n  type: 'ADD_USERS',\n  users: Array<User>,\n};\nconst users = (state: State = [], action: Action) => {\n  switch (action.type) {\n    case 'ADD_USERS':\n      return [...state, ...action.users];\n    default:\n      return state;\n  }\n};\n\nexport default users;\n","//@flow\nimport {combineReducers} from 'redux';\nimport users from './users';\n\nexport default combineReducers({\n  users,\n});\n","//@flow\nimport React, {Component} from 'react';\nimport {HashRouter} from 'react-router-dom';\nimport MainNav from './screens/MainNav';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nclass App extends Component<{}> {\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <MainNav />\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config: Object) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL || '',\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL || ''}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        if (navigator.serviceWorker) {\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit http://bit.ly/CRA-PWA',\n            );\n          });\n        }\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  if (navigator.serviceWorker) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (\n                navigator.serviceWorker &&\n                navigator.serviceWorker.controller\n              ) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        if (navigator.serviceWorker) {\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        }\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker) {\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister();\n      });\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root: ?Element = document.getElementById('root');\n\nif (root != null) {\n  ReactDOM.render(<App />, root);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}